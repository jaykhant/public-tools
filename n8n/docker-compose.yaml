services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # App
      NODE_ENV: production
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: ${N8N_PORT}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      WEBHOOK_URL: ${N8N_WEBHOOK_URL}    # set if behind a reverse proxy / public URL
      GENERIC_TIMEZONE: ${N8N_TIMEZONE}
      TZ: ${N8N_TIMEZONE}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_DIAGNOSTICS_ENABLED: "false"
      N8N_RUNNERS_ENABLED: "true"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"

      # DB
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: ${POSTGRES_HOST}
      DB_POSTGRESDB_PORT: ${POSTGRES_PORT}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_SCHEMA: ${POSTGRES_SCHEMA}
      DB_POSTGRESDB_SSL_ENABLED: "true"
    volumes:
      - n8n_data:/home/node/.n8n
    # uncomment if your reverse proxy needs real client IPs
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

volumes:
  n8n_data: